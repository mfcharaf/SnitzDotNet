.foo {}
/*Main Menu*/

.adminMenu .AspNet-Menu-Vertical
{
    position:relative;
    left: 0;
    z-index: 300;
    line-height:1.1em;
}

/* The menu adapter renders an unordered list (ul) in HTML for each tier in the menu. */
/* So, effectively says: style all tiers in the menu this way... */
.adminMenu ul
{
    background:#CCCCCC;
}

/* Top tier */
.adminMenu .AspNet-Menu-Vertical ul.AspNet-Menu
{
    width: 15em;
}
.adminMenu .AspNet-Menu-NonLink{color:White;}

/* This rule effectively says: style all tiers EXCEPT THE TOP TIER in the menu this way... */
/* In other words, this rule can be used to style the second and third tiers of the menu without impacting */
/* the topmost tier's appearance. */
.adminMenu ul.AspNet-Menu ul
{
    width: 15em;
    z-index: 300;
    display:block;
    position:relative;
}

.adminMenu ul.AspNet-Menu ul ul
{
    width: 12em;
    left: 10.4em;
}

/* The menu adapter generates a list item (li) in HTML for each menu item. */
/* Use this rule create the common appearance of each menu item. */
.adminMenu ul.AspNet-Menu li
{
    background-color:#f8f8f8;
}

/* Within each menu item is a link or a span, depending on whether or not the MenuItem has defined it's */
/* NavigateUrl property. By setting a transparent background image here you can effectively layer two images */
/* in each menu item.  One comes from the CSS rule (above) governing the li tag that each menu item has. */
/* The second image comes from this rule (below). */
.adminMenu ul.AspNet-Menu li a, .adminMenu ul.AspNet-Menu li span
{
    padding: 4px 1px 4px 1px;
    border-right: 1px solid #9f9f9f;
    border-left: 1px solid #9f9f9f;
    border-bottom: 0;
}

/* When a menu item contains no submenu items it is marked as a "leaf" and can be styled specially by this rule. */
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Leaf a,
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Leaf span
{
    background-image: none;
}

/* Not used presently.  This is here if you modify the menu adapter so it renders img tags, too. */
.adminMenu ul.AspNet-Menu li a img
{
    border-style: none;
    vertical-align: middle;
}

/* When you hover over a menu item, this rule comes into play. */
/* Browsers that do not support the CSS hover pseudo-class, use JavaScript to dynamically change the */
/* menu item's li tag so it has the AspNet-Menu-Hover class when the cursor is over that li tag. */
/* See MenuAdapter.js (in the JavaScript folder). */
.adminMenu ul.AspNet-Menu li:hover, .adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover
{
    background: Gray;
}

.adminMenu ul.AspNet-Menu .AspNet-Menu-NonLink
{
    background:silver;
}
.adminMenu ul.AspNet-Menu li:hover a, 
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover a,
.adminMenu ul.AspNet-Menu li:hover li:hover a, 
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover li.AspNet-Menu-Hover a,
.adminMenu ul.AspNet-Menu li:hover li:hover ul a:hover, 
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover li.AspNet-Menu-Hover ul a:hover
{
    color: White;
}
.adminMenu ul.AspNet-Menu li:hover span, 
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover span, 
.adminMenu ul.AspNet-Menu li:hover li:hover span, 
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover li.AspNet-Menu-Hover span, 
.adminMenu ul.AspNet-Menu li:hover li:hover ul span.Asp-Menu-Hover, 
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover li.AspNet-Menu-Hover ul span.Asp-Menu-Hover
{
    color: White;
}

.adminMenu ul.AspNet-Menu li:hover ul a, 
.adminMenu ul.AspNet-Menu li:hover ul span, 
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover ul a,
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover ul span,
.adminMenu ul.AspNet-Menu li:hover li:hover ul a, 
.adminMenu ul.AspNet-Menu li:hover li:hover ul span, 
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover li.AspNet-Menu-Hover ul a,
.adminMenu ul.AspNet-Menu li.AspNet-Menu-Hover li.AspNet-Menu-Hover ul span
{
    color:inherit;

}

/* While you hover over a list item (li) you are also hovering over a link or span because */
/* the link or span covers the interior of the li.  So you can set some hover-related styles */
/* in the rule (above) for the li but set other hover-related styles in this (below) rule. */
.adminMenu ul.AspNet-Menu li a:hover,
.adminMenu ul.AspNet-Menu li span.Asp-Menu-Hover
{
    color: Gray;

}

.adminMenu ul.AspNet-Menu li.AspNet-Menu-Leaf a:hover
{
    background-image: none;
}

a.AspNet-Menu-Link:visited{color:#111111;}
a.AspNet-Menu-Link:hover{ text-decoration: none;  color: Gray;}

        #container{width:95%;margin:auto}
        #leftcolumn{float:left;width:20%; left: 0; top: 0;}
        #contentcolumn{width:50%;margin:auto;height:auto;vertical-align:top;float:left;border-radius:5px;}
        /* button style */

a.modLink span {
    display: inline-block;
    white-space:nowrap;
    width: 160px;
    padding-left: 6px;
    border: 1px solid silver;
    border-radius:3px
} 
a.modLink:hover span, a.modLink:active span {
    background-color: #ababab;
} 
a.modLink:hover {
    text-decoration:none;
    color:#000000;
}

.mod_enabled_lbl{display: inline-block;width:100px;font-weight: bold;}
.mod_btn_pnl{text-align: right;border:1px solid gray;background-color: silver;margin-top:3px;padding :4px;border-radius:4px;}
